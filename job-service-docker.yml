job-service:
  url: http://job:8082
review-service:
  url: http://review:8083
company-service:
  url: http://company:8081

spring:
  data:
    mongodb:
      uri: mongodb://mongo_container:27017/jobdb
    #uri: ${ATLAS_SECRET}
      #database: jobdb
      database: jobdb
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  security:
    oauth2:
      resourceserver:
        jwt:
          secret: "${app.jwtSecret}"
management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true


rabbitmq:
  exchange:
    name: job.exchange
  queue:
    name: job.queue
  routing:
    key: job.tracking

server:
  port: 8082

app:
  message: "Hello job service123!"
  jwtSecret: M9I6vAzZgxgTVKe9ZzMZy7OLs/ly1G7d0ozukNY6hGE=
eureka:
  client:
    service-url:
      defaultZone: http://servicereg:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true


logging:
  file:
    name: logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 3MB
      max-history: 3 #Day

#Resilince4j
resilience4j:
  circuitbreaker:
    instances:
      companyService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
  retry:
    instances:
      jobRetryCompany:
        maxAttempts: 5
        waitDuration: 500ms

  ratelimiter:
    instances:
      messageLimiter:
        timeout-duration: 0
        limit-refresh-period: 4s
        limit-for-period:  2